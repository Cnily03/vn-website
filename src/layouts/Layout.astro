---
import FaviconHeader from "@/components/FaviconHeader.astro";
import NavBarConfigurable from "@/components/NavBarConfigurable.astro";
import Footer from "@/components/Footer.astro";

import { parsedSiteConfig as psc } from "@/site-config";

export interface Props {
    title: string;
    active?: string;
    useBg?: boolean;
    defaultTheme?: "light" | "dark";
    enableThemeSwitch?: boolean;
    showFooter?: boolean;
    autoHideNav?: boolean;
    /**
     * If true, the slot will be placed below the navbar
     */
    padTopNav?: boolean;
    padTopType?: "margin" | "padding";
}

const {
    title,
    active,
    useBg = false,
    defaultTheme = "dark",
    enableThemeSwitch = false,
    showFooter = true,
    autoHideNav = true,
    padTopNav = true,
    padTopType = "padding"
} = Astro.props;

const conf = await psc.navbar;
---

<!doctype html>
<html lang="en" data-theme={defaultTheme}>
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="V&N Team site" />
        <meta name="viewport" content="width=device-width" />
        <FaviconHeader />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body>
        {
            useBg && (
                <div class="background">
                    <div class="bg-mask" />
                </div>
            )
        }
        <NavBarConfigurable autoHide={autoHideNav} config={conf} active={active} switchTheme={enableThemeSwitch} />
        <main class:list={[{ "pad-top-nav": padTopNav }]} data-pad-top-type={padTopNav && padTopType}><slot /></main>
        {showFooter && <Footer />}
    </body>
</html>

<style is:global lang="scss">
    @import "@/styles/colors.scss";
    @import "@/styles/defines.scss";
    @import "@/styles/scroll.scss";
    :root {
        @include scroll(8px);
    }
    ::selection {
        background-color: rgba(61, 170, 194, 0.25);
    }
    html {
        background-color: var(--background-color);
        color: var(--font-color);
        font-size: $root-font-size;
        font-family:
            system-ui,
            -apple-system,
            BlinkMacSystemFont,
            HarmonyOS Sans SC,
            PingFang SC,
            DejaVu Sans,
            Microsoft YaHei UI,
            Segoe UI,
            Roboto,
            Oxygen,
            Ubuntu,
            Cantarell,
            Fira Sans,
            Droid Sans,
            Helvetica Neue,
            Helvetica,
            Arial,
            sans-serif;
    }
    body {
        margin: 0;
        padding: 0;
        & > main {
            box-sizing: border-box;
            min-height: 100vh;
        }
        & > main.pad-top-nav[data-pad-top-type="margin"] {
            margin-top: calc($nav-height + $nav-border-width);
            min-height: calc(100vh - $nav-height - $nav-border-width);
        }
        & > main.pad-top-nav[data-pad-top-type="padding"] {
            padding-top: calc($nav-height + $nav-border-width);
            min-height: 100vh;
        }
    }
    code {
        font-family:
            MesloLGS Nerd Font Mono,
            SFMono-Regular,
            SF Mono,
            Cascadia Mono,
            Menlo,
            Monaco,
            Lucida Console,
            Consolas,
            JetBrains Mono,
            Liberation Mono,
            DejaVu Sans Mono,
            Bitstream Vera Sans Mono,
            Courier New,
            monospace;
    }
    a {
        color: var(--primary-color);
        text-decoration: none;
        cursor: pointer;
        transition: color 0.25s ease;
        &:hover {
            color: var(--secondary-color);
        }
    }
    .background {
        background: url(/images/pattern_bg.png) repeat;
        width: 100%;
        position: fixed;
        left: 0;
        bottom: 0;
        right: 0;
        top: 0;
        z-index: -9999;
        animation: bgscroll 40s infinite linear;
        $background-width: 1200px;
        $background-height: 1200px;
        @keyframes bgscroll {
            from {
                background-position: 0 $background-height;
            }
            to {
                background-position: 0 0;
            }
        }
        .bg-mask {
            position: fixed;
            z-index: -9999;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--background-color);
            opacity: var(--custom-background-mask-opacity);
            // pointer-events: none;
        }
    }
</style>
